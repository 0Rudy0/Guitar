//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GuitarDBModel", "Song_Author", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Guitar.Model3.Author), "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Guitar.Model3.Song), true)]
[assembly: EdmRelationshipAttribute("GuitarDBModel", "Song_Link", "Song", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Guitar.Model3.Song), "InternetLinks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Guitar.Model3.InternetLinks), true)]

#endregion

namespace Guitar.Model3
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GuitarDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GuitarDBEntities object using the connection string found in the 'GuitarDBEntities' section of the application configuration file.
        /// </summary>
        public GuitarDBEntities() : base("name=GuitarDBEntities", "GuitarDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GuitarDBEntities object.
        /// </summary>
        public GuitarDBEntities(string connectionString) : base(connectionString, "GuitarDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GuitarDBEntities object.
        /// </summary>
        public GuitarDBEntities(EntityConnection connection) : base(connection, "GuitarDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Author> Author
        {
            get
            {
                if ((_Author == null))
                {
                    _Author = base.CreateObjectSet<Author>("Author");
                }
                return _Author;
            }
        }
        private ObjectSet<Author> _Author;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InternetLinks> InternetLinks
        {
            get
            {
                if ((_InternetLinks == null))
                {
                    _InternetLinks = base.CreateObjectSet<InternetLinks>("InternetLinks");
                }
                return _InternetLinks;
            }
        }
        private ObjectSet<InternetLinks> _InternetLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Song> Song
        {
            get
            {
                if ((_Song == null))
                {
                    _Song = base.CreateObjectSet<Song>("Song");
                }
                return _Song;
            }
        }
        private ObjectSet<Song> _Song;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Author EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthor(Author author)
        {
            base.AddObject("Author", author);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InternetLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInternetLinks(InternetLinks internetLinks)
        {
            base.AddObject("InternetLinks", internetLinks);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Song EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSong(Song song)
        {
            base.AddObject("Song", song);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GuitarDBModel", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="authorID">Initial value of the authorID property.</param>
        /// <param name="authorName">Initial value of the authorName property.</param>
        /// <param name="authorGenre">Initial value of the authorGenre property.</param>
        public static Author CreateAuthor(global::System.Int32 authorID, global::System.String authorName, global::System.String authorGenre)
        {
            Author author = new Author();
            author.authorID = authorID;
            author.authorName = authorName;
            author.authorGenre = authorGenre;
            return author;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 authorID
        {
            get
            {
                return _authorID;
            }
            set
            {
                if (_authorID != value)
                {
                    OnauthorIDChanging(value);
                    ReportPropertyChanging("authorID");
                    _authorID = StructuralObject.SetValidValue(value, "authorID");
                    ReportPropertyChanged("authorID");
                    OnauthorIDChanged();
                }
            }
        }
        private global::System.Int32 _authorID;
        partial void OnauthorIDChanging(global::System.Int32 value);
        partial void OnauthorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String authorName
        {
            get
            {
                return _authorName;
            }
            set
            {
                OnauthorNameChanging(value);
                ReportPropertyChanging("authorName");
                _authorName = StructuralObject.SetValidValue(value, false, "authorName");
                ReportPropertyChanged("authorName");
                OnauthorNameChanged();
            }
        }
        private global::System.String _authorName;
        partial void OnauthorNameChanging(global::System.String value);
        partial void OnauthorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String authorGenre
        {
            get
            {
                return _authorGenre;
            }
            set
            {
                OnauthorGenreChanging(value);
                ReportPropertyChanging("authorGenre");
                _authorGenre = StructuralObject.SetValidValue(value, false, "authorGenre");
                ReportPropertyChanged("authorGenre");
                OnauthorGenreChanged();
            }
        }
        private global::System.String _authorGenre;
        partial void OnauthorGenreChanging(global::System.String value);
        partial void OnauthorGenreChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GuitarDBModel", "Song_Author", "Song")]
        public EntityCollection<Song> Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Song>("GuitarDBModel.Song_Author", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Song>("GuitarDBModel.Song_Author", "Song", value);
                }
            }
        }

        #endregion

        public override string ToString () {
            return this._authorName;
        }

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GuitarDBModel", Name="InternetLinks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InternetLinks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InternetLinks object.
        /// </summary>
        /// <param name="linkID">Initial value of the linkID property.</param>
        /// <param name="songID">Initial value of the songID property.</param>
        /// <param name="linkName">Initial value of the linkName property.</param>
        /// <param name="linkAdress">Initial value of the linkAdress property.</param>
        /// <param name="linkType">Initial value of the linkType property.</param>
        public static InternetLinks CreateInternetLinks(global::System.Int32 linkID, global::System.Int32 songID, global::System.String linkName, global::System.String linkAdress, global::System.String linkType)
        {
            InternetLinks internetLinks = new InternetLinks();
            internetLinks.linkID = linkID;
            internetLinks.songID = songID;
            internetLinks.linkName = linkName;
            internetLinks.linkAdress = linkAdress;
            internetLinks.linkType = linkType;
            return internetLinks;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 linkID
        {
            get
            {
                return _linkID;
            }
            set
            {
                if (_linkID != value)
                {
                    OnlinkIDChanging(value);
                    ReportPropertyChanging("linkID");
                    _linkID = StructuralObject.SetValidValue(value, "linkID");
                    ReportPropertyChanged("linkID");
                    OnlinkIDChanged();
                }
            }
        }
        private global::System.Int32 _linkID;
        partial void OnlinkIDChanging(global::System.Int32 value);
        partial void OnlinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 songID
        {
            get
            {
                return _songID;
            }
            set
            {
                OnsongIDChanging(value);
                ReportPropertyChanging("songID");
                _songID = StructuralObject.SetValidValue(value, "songID");
                ReportPropertyChanged("songID");
                OnsongIDChanged();
            }
        }
        private global::System.Int32 _songID;
        partial void OnsongIDChanging(global::System.Int32 value);
        partial void OnsongIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String linkName
        {
            get
            {
                return _linkName;
            }
            set
            {
                OnlinkNameChanging(value);
                ReportPropertyChanging("linkName");
                _linkName = StructuralObject.SetValidValue(value, false, "linkName");
                ReportPropertyChanged("linkName");
                OnlinkNameChanged();
            }
        }
        private global::System.String _linkName;
        partial void OnlinkNameChanging(global::System.String value);
        partial void OnlinkNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String linkAdress
        {
            get
            {
                return _linkAdress;
            }
            set
            {
                OnlinkAdressChanging(value);
                ReportPropertyChanging("linkAdress");
                _linkAdress = StructuralObject.SetValidValue(value, false, "linkAdress");
                ReportPropertyChanged("linkAdress");
                OnlinkAdressChanged();
            }
        }
        private global::System.String _linkAdress;
        partial void OnlinkAdressChanging(global::System.String value);
        partial void OnlinkAdressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String linkType
        {
            get
            {
                return _linkType;
            }
            set
            {
                OnlinkTypeChanging(value);
                ReportPropertyChanging("linkType");
                _linkType = StructuralObject.SetValidValue(value, false, "linkType");
                ReportPropertyChanged("linkType");
                OnlinkTypeChanged();
            }
        }
        private global::System.String _linkType;
        partial void OnlinkTypeChanging(global::System.String value);
        partial void OnlinkTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GuitarDBModel", "Song_Link", "Song")]
        public Song Song
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("GuitarDBModel.Song_Link", "Song").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("GuitarDBModel.Song_Link", "Song").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Song> SongReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Song>("GuitarDBModel.Song_Link", "Song");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Song>("GuitarDBModel.Song_Link", "Song", value);
                }
            }
        }

        #endregion

        public override string ToString () {
            return this._linkName;
        }
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GuitarDBModel", Name="Song")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Song : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Song object.
        /// </summary>
        /// <param name="songID">Initial value of the songID property.</param>
        /// <param name="youtubeAdress">Initial value of the youtubeAdress property.</param>
        /// <param name="authorID">Initial value of the authorID property.</param>
        /// <param name="chordsLearned">Initial value of the chordsLearned property.</param>
        /// <param name="lyricsLearned">Initial value of the lyricsLearned property.</param>
        /// <param name="songName">Initial value of the songName property.</param>
        public static Song CreateSong(global::System.Int32 songID, global::System.String youtubeAdress, global::System.Int32 authorID, global::System.Byte chordsLearned, global::System.Byte lyricsLearned, global::System.String songName)
        {
            Song song = new Song();
            song.songID = songID;
            song.youtubeAdress = youtubeAdress;
            song.authorID = authorID;
            song.chordsLearned = chordsLearned;
            song.lyricsLearned = lyricsLearned;
            song.songName = songName;
            return song;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 songID
        {
            get
            {
                return _songID;
            }
            set
            {
                if (_songID != value)
                {
                    OnsongIDChanging(value);
                    ReportPropertyChanging("songID");
                    _songID = StructuralObject.SetValidValue(value, "songID");
                    ReportPropertyChanged("songID");
                    OnsongIDChanged();
                }
            }
        }
        private global::System.Int32 _songID;
        partial void OnsongIDChanging(global::System.Int32 value);
        partial void OnsongIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String youtubeAdress
        {
            get
            {
                return _youtubeAdress;
            }
            set
            {
                OnyoutubeAdressChanging(value);
                ReportPropertyChanging("youtubeAdress");
                _youtubeAdress = StructuralObject.SetValidValue(value, false, "youtubeAdress");
                ReportPropertyChanged("youtubeAdress");
                OnyoutubeAdressChanged();
            }
        }
        private global::System.String _youtubeAdress;
        partial void OnyoutubeAdressChanging(global::System.String value);
        partial void OnyoutubeAdressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 authorID
        {
            get
            {
                return _authorID;
            }
            set
            {
                OnauthorIDChanging(value);
                ReportPropertyChanging("authorID");
                _authorID = StructuralObject.SetValidValue(value, "authorID");
                ReportPropertyChanged("authorID");
                OnauthorIDChanged();
            }
        }
        private global::System.Int32 _authorID;
        partial void OnauthorIDChanging(global::System.Int32 value);
        partial void OnauthorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte chordsLearned
        {
            get
            {
                return _chordsLearned;
            }
            set
            {
                OnchordsLearnedChanging(value);
                ReportPropertyChanging("chordsLearned");
                _chordsLearned = StructuralObject.SetValidValue(value, "chordsLearned");
                ReportPropertyChanged("chordsLearned");
                OnchordsLearnedChanged();
            }
        }
        private global::System.Byte _chordsLearned;
        partial void OnchordsLearnedChanging(global::System.Byte value);
        partial void OnchordsLearnedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte lyricsLearned
        {
            get
            {
                return _lyricsLearned;
            }
            set
            {
                OnlyricsLearnedChanging(value);
                ReportPropertyChanging("lyricsLearned");
                _lyricsLearned = StructuralObject.SetValidValue(value, "lyricsLearned");
                ReportPropertyChanged("lyricsLearned");
                OnlyricsLearnedChanged();
            }
        }
        private global::System.Byte _lyricsLearned;
        partial void OnlyricsLearnedChanging(global::System.Byte value);
        partial void OnlyricsLearnedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String songName
        {
            get
            {
                return _songName;
            }
            set
            {
                OnsongNameChanging(value);
                ReportPropertyChanging("songName");
                _songName = StructuralObject.SetValidValue(value, false, "songName");
                ReportPropertyChanged("songName");
                OnsongNameChanged();
            }
        }
        private global::System.String _songName;
        partial void OnsongNameChanging(global::System.String value);
        partial void OnsongNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GuitarDBModel", "Song_Author", "Author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("GuitarDBModel.Song_Author", "Author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("GuitarDBModel.Song_Author", "Author").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("GuitarDBModel.Song_Author", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("GuitarDBModel.Song_Author", "Author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GuitarDBModel", "Song_Link", "InternetLinks")]
        public EntityCollection<InternetLinks> InternetLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InternetLinks>("GuitarDBModel.Song_Link", "InternetLinks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InternetLinks>("GuitarDBModel.Song_Link", "InternetLinks", value);
                }
            }
        }

        #endregion

        public override string ToString () {
            return this._songName;
        }
    }

    #endregion

}
